# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-20.04'

steps:
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '9ac1e3a1-e687-4aa6-ab2b-0108d21425e2'
    definition: '31'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    artifactName: 'nuspec'
    targetPath: '$(System.DefaultWorkingDirectory)'
  displayName: 'Get build-artifacts (nuspec)'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '9ac1e3a1-e687-4aa6-ab2b-0108d21425e2'
    definition: '31'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    artifactName: 'Csharp-files'
    targetPath: '$(System.DefaultWorkingDirectory)'
  displayName: 'Get build-artifacts (SWIG C#-files)'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      rm uplink.NET/uplink.NET/SWIG-Generated/*.cs
      mv *.cs uplink.NET/uplink.NET/SWIG-Generated
      rm ./*.cs
  displayName: 'Copy SWIG-files to solution'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'uplink.NET/uplink.NET/uplink.NET.csproj'
  displayName: 'Build uplink.NET-library'