# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

stages:
- stage: amd64
  pool:
    vmImage: 'ubuntu-20.04'
  jobs:
    - job: amd64

      steps:
      - script: |
          ls
          rm *.yml
          rm *.go
          rm *.i
          ls
        displayName: 'Cleanup'

      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'specific'
          project: '9ac1e3a1-e687-4aa6-ab2b-0108d21425e2'
          definition: '26'
          specificBuildWithTriggering: true
          buildVersionToDownload: 'latest'
          itemPattern: |
            **
            !*.cs
            !*.dll
            !win-x86-dll
            !win-x64-dll
            !Csharp-files
          targetPath: '$(System.DefaultWorkingDirectory)'
        displayName: 'Get build-artifacts'

      - script: |
          export CGO_ENABLED=1
          export GOARCH=amd64
        displayName: 'Prepare for Target amd64'

      - task: Go@0
        inputs:
          command: 'build'
          arguments: '-buildmode c-shared -o storj_uplink-amd64.so'
          workingDirectory: '$(System.DefaultWorkingDirectory)/uplink-c'
        displayName: 'Build amd64'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/uplink-c/storj_uplink-amd64.so'
          artifact: 'linux_amd64'
          publishLocation: 'pipeline'
        displayName: 'Publish storj_uplink-amd64.so'

- stage: i368
  pool:
    vmImage: 'ubuntu-20.04'
  jobs:
    - job: i386
      steps:
      - script: |
          ls
          rm *.yml
          rm *.go
          rm *.i
          ls
        displayName: 'Cleanup'

      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'specific'
          project: '9ac1e3a1-e687-4aa6-ab2b-0108d21425e2'
          definition: '26'
          specificBuildWithTriggering: true
          buildVersionToDownload: 'latest'
          itemPattern: |
            **
            !*.cs
            !*.dll
            !win-x86-dll
            !win-x64-dll
            !Csharp-files
          targetPath: '$(System.DefaultWorkingDirectory)'
        displayName: 'Get build-artifacts'

      - script: |
          export CGO_ENABLED=1
          export GOARCH=386
        displayName: 'Prepare for Target 386'

      - task: Go@0
        inputs:
          command: 'build'
          arguments: '-buildmode c-shared -o storj_uplink-386.so'
          workingDirectory: '$(System.DefaultWorkingDirectory)/uplink-c'
        displayName: 'Build 386'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/uplink-c/storj_uplink-386.so'
          artifact: 'linux_386'
          publishLocation: 'pipeline'
        displayName: 'Publish storj_uplink-386.so'