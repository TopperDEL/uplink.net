//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace uplink.SWIG {

public class ListOptions : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ListOptions(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ListOptions obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ListOptions() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          storj_uplinkPINVOKE.delete_ListOptions(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string prefix {
    set {
      storj_uplinkPINVOKE.ListOptions_prefix_set(swigCPtr, value);
    } 
    get {
      string ret = storj_uplinkPINVOKE.ListOptions_prefix_get(swigCPtr);
      return ret;
    } 
  }

  public string cursor {
    set {
      storj_uplinkPINVOKE.ListOptions_cursor_set(swigCPtr, value);
    } 
    get {
      string ret = storj_uplinkPINVOKE.ListOptions_cursor_get(swigCPtr);
      return ret;
    } 
  }

  public char delimiter {
    set {
      storj_uplinkPINVOKE.ListOptions_delimiter_set(swigCPtr, value);
    } 
    get {
      char ret = storj_uplinkPINVOKE.ListOptions_delimiter_get(swigCPtr);
      return ret;
    } 
  }

  public bool recursive {
    set {
      storj_uplinkPINVOKE.ListOptions_recursive_set(swigCPtr, value);
    } 
    get {
      bool ret = storj_uplinkPINVOKE.ListOptions_recursive_get(swigCPtr);
      return ret;
    } 
  }

  public ListDirection direction {
    set {
      storj_uplinkPINVOKE.ListOptions_direction_set(swigCPtr, (int)value);
    } 
    get {
      ListDirection ret = (ListDirection)storj_uplinkPINVOKE.ListOptions_direction_get(swigCPtr);
      return ret;
    } 
  }

  public long limit {
    set {
      storj_uplinkPINVOKE.ListOptions_limit_set(swigCPtr, value);
    } 
    get {
      long ret = storj_uplinkPINVOKE.ListOptions_limit_get(swigCPtr);
      return ret;
    } 
  }

  public ListOptions() : this(storj_uplinkPINVOKE.new_ListOptions(), true) {
  }

}

}
