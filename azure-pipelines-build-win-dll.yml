# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
#Clone the uplink-c-repo
- task: CmdLine@2
  inputs:
    script: |
      SET STORJ_VERSION=v1.1.0
      
      echo *** Cloning uplink-c version %STORJ_VERSION%
      git clone --branch %STORJ_VERSION% https://github.com/storj/uplink-c.git
      
      echo *** Copying necessary files
      copy .\uplink.net\SWIG\*.i .\uplink-c\ /Y
      copy .\uplink.net\SWIG\*.exe .\uplink-c\ /Y
      copy .\uplink.net\GO\*.go .\uplink-c\ /Y
      
      cd .\uplink-c\
      
      echo *** Replacing the version-variable within the DLL
      fart "storj_uplink_second.i" "STORJVERSION" "%STORJ_VERSION%"
    failOnStderr: true
#- task: NuGetToolInstaller@1

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
